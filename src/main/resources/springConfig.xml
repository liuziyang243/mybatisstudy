<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
    <!-- 加载配置文件 -->
    <context:property-placeholder location="classpath:dbconfig.properties"/>

    <!--支持注解-->
    <context:annotation-config/>

    <!--自动扫描包-->
    <context:component-scan base-package="com.learn.chapter8" use-default-filters="false">
        <!--配置扫描注解的类型-->
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Service"/>
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Repository"/>
    </context:component-scan>
    <beans>
        <!-- 数据源 org.apache.commons.dbcp.BasicDataSource com.alibaba.druid.pool.DruidDataSource -->
        <bean id="mysqlDataSource" class="com.alibaba.druid.pool.DruidDataSource">

            <property name="driverClassName" value="${mysql.driver}"/>
            <property name="url" value="${mysql.url}"/>
            <property name="username" value="${mysql.username}"/>
            <property name="password" value="${mysql.password}"/>

            <!-- 初始化连接大小 -->
            <property name="initialSize" value="${mysql.initialSize}"/>
            <!-- 连接池最大使用连接数量 -->
            <property name="maxActive" value="${mysql.maxActive}"/>
            <!-- 连接池最小空闲 -->
            <property name="minIdle" value="${mysql.minIdle}"/>
            <!-- 获取连接最大等待时间 -->
            <property name="maxWait" value="${mysql.maxWait}"/>

            <property name="validationQuery" value="${mysql.validationQuery}"/>
            <property name="testOnBorrow" value="${mysql.testOnBorrow}"/>
            <property name="testOnReturn" value="${mysql.testOnReturn}"/>
            <property name="testWhileIdle" value="${mysql.testWhileIdle}"/>

            <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
            <property name="timeBetweenEvictionRunsMillis" value="${mysql.timeBetweenEvictionRunsMillis}"/>
            <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
            <property name="minEvictableIdleTimeMillis" value="${mysql.minEvictableIdleTimeMillis}"/>

            <!-- 打开removeAbandoned功能 -->
            <property name="removeAbandoned" value="${mysql.removeAbandoned}"/>
            <!-- 1800秒，也就是30分钟 -->
            <property name="removeAbandonedTimeout" value="${mysql.removeAbandonedTimeout}"/>
            <!-- 关闭abanded连接时输出错误日志 -->
            <property name="logAbandoned" value="${mysql.logAbandoned}"/>

            <!-- 监控数据库 -->
            <!-- <property name="filters" value="stat" /> -->
            <property name="filters" value="mergeStat"/>
        </bean>

        <bean id="mysqlTransactionManager"
              class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
            <property name="dataSource" ref="mysqlDataSource"/>
        </bean>

        <!-- 声明式事务 -->
        <tx:annotation-driven transaction-manager="mysqlTransactionManager"
                              proxy-target-class="true"/>

        <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
            <property name="dataSource" ref="mysqlDataSource"/>
            <property name="configLocation" value="classpath:sqlMapConfig.xml"/>
        </bean>

        <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate" scope="prototype">
            <constructor-arg index="0" ref="sqlSessionFactory"/>
        </bean>

        <!--<bean id="userDAO2" class="com.learn.chapter8.dao.UserDAOImpl">-->
        <!--<property name="sqlSessionTemplate" ref="sqlSessionTemplate"/>-->
        <!--</bean>-->

        <!--<bean id="userDAO" class="org.mybatis.spring.mapper.MapperFactoryBean">-->
        <!--<property name="mapperInterface" value="com.learn.chapter8.dao.UserDAO"/>-->
        <!--<property name="sqlSessionTemplate" ref="sqlSessionTemplate"/>-->
        <!--<property name="sqlSessionFactory" ref="sqlSessionFactory"/>-->
        <!--</bean>-->

        <!--采用自动扫描的方式创建mapper-->
        <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
            <property name="basePackage" value="com.learn.chapter8.dao"/>
            <property name="sqlSessionTemplateBeanName" value="sqlSessionTemplate"/>
            <property name="annotationClass" value="org.springframework.stereotype.Repository"/>
        </bean>
    </beans>
</beans>